apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jenkinsci
  namespace: flux-system
spec:
  interval: 36h45m10s
  timeout: 3m
  releaseName: jenkins
  targetNamespace: jenkins
  storageNamespace: jenkins
  chart:
    spec:
      chart: jenkins
      version: '^3.5.12'
      sourceRef:
        kind: HelmRepository
        name: jenkinsci
        namespace: flux-system
      interval: 40m
  values:
    persistence:
      enabled: true
      #existingClaim: jenkins-precreated
    controller:
      imagePullPolicy: IfNotPresent
      ingress:
        enabled: true
        apiVersion: networking.k8s.io/v1
        hostName: jenkins.hephy.pro
        ingressClassName: internal
        annotations:
        #cert-manager.io/cluster-issuer: letsencrypt-production
        #kubernetes.io/ingress.class: internal
        tls:
          - secretName: jenkins.hephy.pro
            hosts:
              - jenkins.hephy.pro
      secondaryIngress:
        enabled: true
        apiVersion: networking.k8s.io/v1
        hostName: jenkins.hephy.pro
        ingressClassName: public
        annotations:
        #cert-manager.io/cluster-issuer: letsencrypt-production
        #kubernetes.io/ingress.class: public
        tls:
          - secretName: jenkins.hephy.pro
            hosts:
              - jenkins.hephy.pro
      JCasC:
        defaultConfig: false
        configScripts:
          kingdon-ci-org-folder: |
            jobs:
              - script: >
                  organizationFolder("kingdon-ci") {
                    description("configured with JCasC")
                    displayName("Kingdon-CI")

                    organizations {
                      github {
                        repoOwner("kingdon-ci")
                        apiUri("https://api.github.com")
                        credentialsId("9c4638e0-4ed9-48c6-b0e1-38550d345448")
                        traits {
                          gitHubTagDiscovery()
                          gitHubBranchDiscovery {
                            strategyId(1)
                          }
                          pruneStaleBranchTrait()
                        }
                      }
                    }
                    configure {
                      def traits = it / navigators / 'org.jenkinsci.plugins.github__branch__source.GitHubSCMNavigator' / traits
                      traits << 'org.jenkinsci.plugins.github__branch__source.OriginPullRequestDiscoveryTrait' {
                        strategyId 1
                      }

                      // scan all repos at least once a day
                      def triggers = it / 'triggers'
                      triggers << 'com.cloudbees.hudson.plugins.folder.computed.PeriodicFolderTrigger' {
                          spec('H H * * *')
                          interval(86400000)
                      }

                    }
                    projectFactories {
                      workflowMultiBranchProjectFactory {
                        scriptPath("Jenkinsfile")
                      }
                    }
                  }
          kubernetes-secret-credentials: |
            credentials:
              system:
                domainCredentials:
                - credentials:
                  # must be 4 spaced after this point
                      - usernamePassword:
                          description: "Docker Registry Push (kingdonb)"
                          id: "docker-registry-admin"
                          password: "${docker-registry-admin-docker-repo-password}"
                          scope: GLOBAL
                          username: "${docker-registry-admin-docker-repo-user}"
                      - usernamePassword:
                          description: "Github Token (kingdonb)"
                          id: "4a8e65ee-b8a3-4e4d-ab9a-b7783fd17243"
                          password: "${jenkins-github-github-token-1}"
                          scope: GLOBAL
                          username: "kingdonb"
                      - usernamePassword:
                          description: "Github Token (kingdonb) - org-wide"
                          id: "9c4638e0-4ed9-48c6-b0e1-38550d345448"
                          password: "${jenkins-github-github-token-2}"
                          scope: GLOBAL
                          username: "kingdonb"
                      - gitHubApp:
                          appID: "133546"
                          description: "Jenkins.Hephy.Pro GitHub App"
                          id: "24d0d1a8-7b10-436c-a959-8c1d667a4653"
                          privateKey: "${jenkins-github-github-app-privkey}"
                      - string:
                          description: "kingdonb GitHub Token (Plain Text)"
                          id: "869e0f2f-1f21-464e-9597-369fa246d4c1"
                          scope: GLOBAL
                          secret: "${jenkins-github-github-token-1}"
                      - string:
                          description: "kingdonb GitHub Token (Plain Text) - Broader Access"
                          id: "f9faa7da-c0d1-45e7-aa59-8e52c37e70a9"
                          scope: GLOBAL
                          secret: "${jenkins-github-github-token-2}"
          github-server: |
            unclassified:
              gitHubPluginConfig:
                configs:
                - credentialsId: "f9faa7da-c0d1-45e7-aa59-8e52c37e70a9"
                  name: "GitHub"
                hookUrl: "https://jenkins.hephy.pro/github-webhook/"
              gitHubConfiguration:
                apiRateLimitChecker: ThrottleForNormalize
          github-oauth: |
            jenkins:
              securityRealm:
                github:
                  githubWebUri: "https://github.com"
                  githubApiUri: "https://api.github.com"
                  clientID: "b4424bc483948a93d4d3"
                  clientSecret: "${jenkins-github-oauth-secret-token}"
                  oauthScopes: "read:org,user:email"
              authorizationStrategy:
                github:
                  adminUserNames: "kingdonb"
                  allowAnonymousJobStatusPermission: false
                  allowAnonymousReadPermission: false
                  allowCcTrayPermission: false
                  allowGithubWebHookPermission: false
                  authenticatedUserCreateJobPermission: false
                  authenticatedUserReadPermission: false
                  organizationNames: "kingdon-ci"
                  useRepositoryPermissions: true
          crumb-issuer: |
            jenkins:
              crumbIssuer:
                standard:
                  excludeClientIPFromCrumb: true
          remoting-security: |
            jenkins:
              remotingSecurity:
                enabled: true
          build-security-authorize-project: |
            security:
              queueItemAuthenticator:
                authenticators:
                - global:
                    strategy: "triggeringUsersAuthorizationStrategy"
          location: |
            unclassified:
              location:
                adminAddress: "Jenkins Admin <jenkins-admin@nerdland.info>"
                url: "https://jenkins.hephy.pro/"
          distributed-builds: |
            jenkins:
              numExecutors: 0
              clouds:
              - kubernetes:
                  containerCap: 10
                  containerCapStr: "10"
                  jenkinsTunnel: "jenkins-agent.jenkins.svc.cluster.local:50000"
                  jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
                  name: "kubernetes"
                  namespace: "jenkins"
                  podLabels:
                  - key: "jenkins/jenkins-jenkins-agent"
                    value: "true"
                  serverUrl: "https://kubernetes.default"
                  templates:
                  - containers:
                    - args: "^${computer.jnlpmac} ^${computer.name}"
                      envVars:
                      - envVar:
                          key: "JENKINS_URL"
                          value: "http://jenkins.jenkins.svc.cluster.local:8080/"
                      image: "jenkins/inbound-agent:4.6-1"
                      name: "jnlp"
                      resourceLimitCpu: "512m"
                      resourceLimitMemory: "512Mi"
                      resourceRequestCpu: "512m"
                      resourceRequestMemory: "512Mi"
                      workingDir: "/home/jenkins"
                    id: "39698bb1fb92f2e49811b1514ddba69a93e9a734af456f227baa88a887431b41"
                    label: "jenkins-jenkins-agent"
                    name: "default"
                    nodeUsageMode: "NORMAL"
                    podRetention: "never"
                    serviceAccount: "default"
                    slaveConnectTimeout: 100
                    slaveConnectTimeoutStr: "100"
                    yamlMergeStrategy: "override"
      additionalExistingSecrets:
        - name: jenkins-github
          keyName: oauth-secret-token
        - name: jenkins-github
          keyName: github-token-1
        - name: jenkins-github
          keyName: github-token-2
        - name: jenkins-github
          keyName: github-app-privkey
        - name: docker-registry-admin
          keyName: docker-repo-user
        - name: docker-registry-admin
          keyName: docker-repo-password
